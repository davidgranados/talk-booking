name: CI

on:
  push:
    branches:
      - main

env:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  REGISTRY: ghcr.io
  IMAGE_NAME: talk-booking
  IMAGE_TAG: latest

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-python-ci-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ci_cd/python/
          file: ci_cd/python/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  service-talk-booking-code-quality:
    needs: build-python-ci-image
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} sh -c "cd services/talk_booking/ && poetry install && poetry run flake8 ."
          docker run --rm ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} sh -c "cd services/talk_booking/ && poetry install && poetry run isort --check-only --profile black ."
          docker run --rm ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} sh -c "cd services/talk_booking/ && poetry install && poetry run black --check ."
          docker run --rm ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} sh -c "cd services/talk_booking/ && poetry install && poetry run bandit ."
          docker run --rm ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} sh -c "cd services/talk_booking/ && poetry install && poetry run safety check ."
